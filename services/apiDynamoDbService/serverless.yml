service: products-api-dynamodb-service
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-2
  memorySize: 128
  tracing:
    lambda: true
    apiGateway: true
  environment:
    DYNAMODB_TABLE:
      "Fn::ImportValue": "product-serverless-table-${self:provider.stage}"

  iamRoleStatements:
    - ${file(../../serverless.common.yml):lambdaPolicyXRay}
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/product-serverless-table-${self:provider.stage}"

plugins:
  - serverless-bundle

functions:
  createProduct:
    handler: src/handlers/products/create.createProduct
    events:
      - http:
          path: product
          method: post
          cors: true
  allProducts:
    handler: src/handlers/products/getAll.getAllProduct
    events:
      - http:
          path: products
          method: get
          cors: true
  getProduct:
    handler: src/handlers/products/get.getProduct
    events:
      - http:
          path: product/{id}
          method: get
          cors: true
  deleteProduct:
    handler: src/handlers/products/delete.deleteProduct
    events:
      - http:
          path: product/{id}
          method: delete
          cors: true
  updateProduct:
    handler: src/handlers/products/update.updateProduct
    events:
      - http:
          path: product/{id}
          method: put
          cors: true
